import Calendar from '../models/Calendar';
import { sequelize } from '../database/database';
import { returnError, returnNotFound, returnWrongError } from './errors';
import moment from 'moment';

//Generate Calendar
export async function generateCalendar(req, res) {

    const year = req.body.year || new Date().getFullYear();
    let totalDays;
    let dates = [];
    let totalDates = 0;

    try {
        const generatedCalendar = await sequelize.query(`
                select generate_series(
                    (date '${ year }-01-01')::date,
                    (date '${ year }-12-31')::date,
                    interval '1 day'
                );
        `);

        totalDays = generatedCalendar[1].rowCount;
        let calendar = generatedCalendar[0];
        let currentDate = moment().format('YYYY-MM-DD');
        calendar.forEach(day => {
            let calendarDay = {
                date: day.generate_series,
                year,
                detail: 'Autogenerated day',
                visible: moment(day.generate_series).isAfter(currentDate) ? true : false
            }
            insertCalendarDay(calendarDay.date, calendarDay.year, calendarDay.visible);
            dates.push(calendarDay);
        });
        return res.status(200).json({
            ok: true,
            dates,
            totalDates
        });
    } catch (e) {
        console.log('Error', e);
        returnError(res, e, 'Create Calendar');
    }
}

async function insertCalendarDay(day, year, visible, totalDates) {
    try {
        const createdDay = await Calendar.create({
            date: day,
            year,
            detail: 'Autogenerated day',
            isVisible: visible
        }, {
            fields: ['date', 'year', 'detail', 'isVisible'],
            returning: ['calendarID', 'date']
        });
        if (createdDay) {
            totalDates++
        }
        return totalDates;
    } catch (e) {
        console.log('Error INSERTING', e);
        returnError(res, e, 'CREATE A DAY IN CALENDAR');
    }
}